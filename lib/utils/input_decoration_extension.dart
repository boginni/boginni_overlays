import 'package:flutter/material.dart';

extension InputdecorationExtension on InputDecoration {
  InputDecoration mergeWith(InputDecoration foregroundDecoration) {
    return InputDecoration(
      icon: foregroundDecoration.icon ?? icon,
      iconColor: foregroundDecoration.iconColor ?? iconColor,
      label: foregroundDecoration.label ?? label,
      labelText: foregroundDecoration.labelText ?? labelText,
      labelStyle: foregroundDecoration.labelStyle ?? labelStyle,
      floatingLabelStyle: foregroundDecoration.floatingLabelStyle ?? floatingLabelStyle,
      helperText: foregroundDecoration.helperText ?? helperText,
      helperStyle: foregroundDecoration.helperStyle ?? helperStyle,
      helperMaxLines: foregroundDecoration.helperMaxLines ?? helperMaxLines,
      hintText: foregroundDecoration.hintText ?? hintText,
      hintStyle: foregroundDecoration.hintStyle ?? hintStyle,
      hintTextDirection: foregroundDecoration.hintTextDirection ?? hintTextDirection,
      hintMaxLines: foregroundDecoration.hintMaxLines ?? hintMaxLines,
      hintFadeDuration: foregroundDecoration.hintFadeDuration ?? hintFadeDuration,
      error: foregroundDecoration.error ?? error,
      errorText: foregroundDecoration.errorText ?? errorText,
      errorStyle: foregroundDecoration.errorStyle ?? errorStyle,
      errorMaxLines: foregroundDecoration.errorMaxLines ?? errorMaxLines,
      floatingLabelBehavior: foregroundDecoration.floatingLabelBehavior ?? floatingLabelBehavior,
      floatingLabelAlignment: foregroundDecoration.floatingLabelAlignment ?? floatingLabelAlignment,
      isCollapsed: foregroundDecoration.isCollapsed ?? isCollapsed,
      isDense: foregroundDecoration.isDense ?? isDense,
      contentPadding: foregroundDecoration.contentPadding ?? contentPadding,
      prefixIcon: foregroundDecoration.prefixIcon ?? prefixIcon,
      prefixIconConstraints: foregroundDecoration.prefixIconConstraints ?? prefixIconConstraints,
      prefix: foregroundDecoration.prefix ?? prefix,
      prefixText: foregroundDecoration.prefixText ?? prefixText,
      prefixStyle: foregroundDecoration.prefixStyle ?? prefixStyle,
      prefixIconColor: foregroundDecoration.prefixIconColor ?? prefixIconColor,
      suffixIcon: foregroundDecoration.suffixIcon ?? suffixIcon,
      suffix: foregroundDecoration.suffix ?? suffix,
      suffixText: foregroundDecoration.suffixText ?? suffixText,
      suffixStyle: foregroundDecoration.suffixStyle ?? suffixStyle,
      suffixIconColor: foregroundDecoration.suffixIconColor ?? suffixIconColor,
      suffixIconConstraints: foregroundDecoration.suffixIconConstraints ?? suffixIconConstraints,
      counter: foregroundDecoration.counter ?? counter,
      counterText: foregroundDecoration.counterText ?? counterText,
      counterStyle: foregroundDecoration.counterStyle ?? counterStyle,
      filled: foregroundDecoration.filled ?? filled,
      fillColor: foregroundDecoration.fillColor ?? fillColor,
      focusColor: foregroundDecoration.focusColor ?? focusColor,
      hoverColor: foregroundDecoration.hoverColor ?? hoverColor,
      errorBorder: foregroundDecoration.errorBorder ?? errorBorder,
      focusedBorder: foregroundDecoration.focusedBorder ?? focusedBorder,
      focusedErrorBorder: foregroundDecoration.focusedErrorBorder ?? focusedErrorBorder,
      disabledBorder: foregroundDecoration.disabledBorder ?? disabledBorder,
      enabledBorder: foregroundDecoration.enabledBorder ?? enabledBorder,
      border: foregroundDecoration.border ?? border,
      // enabled: foregroundDecoration.enabled ?? enabled,
      semanticCounterText: foregroundDecoration.semanticCounterText ?? semanticCounterText,
      alignLabelWithHint: foregroundDecoration.alignLabelWithHint ?? alignLabelWithHint,
      constraints: foregroundDecoration.constraints ?? constraints,
    );
  }
}
